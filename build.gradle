repositories {
    mavenCentral()

    maven {
        url "https://dl.bintray.com/sporklibrary/spork"
    }
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.novoda:bintray-release:0.3.4'
        // bintray usage: ./gradlew clean build bintrayUpload -PbintrayUser=??? -PbintrayKey=??? -PdryRun=false
    }
}

apply plugin: 'com.android.library'
apply plugin: 'bintray-release'

ext {
    // Publishing
    sporkVersion = '1.1.0'
    sporkUserOrg = 'sporklibrary'
    sporkWebsite = 'https://sporklibrary.github.io'
    sporkGroupId = 'io.github.sporklibrary'
    sporkRepoName = 'spork'
    sporkName = 'Spork Android'
    sporkArtifactId = 'spork-android'
}

dependencies {
    compile (
        [group: 'io.github.sporklibrary', name: 'spork', version: '1.4.0'],
    )

    androidTestCompile (
        [group: 'com.android.support', name: 'support-annotations', version: '22.2.0'],
        [group: 'com.android.support.test', name: 'runner', version: '0.4.1']
    )

    androidTestCompile ([group: 'com.android.support.test.espresso', name: 'espresso-core', version: '2.2.1']) {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName sporkVersion
        testInstrumentationRunner 'io.github.sporklibrary.test.TestRunner'
        testApplicationId 'io.github.sporklibrary.test'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/ASL2.0.txt'
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    lintOptions {
        // To address an issue where lint fails due to a javassist dependency,
        // the 'InvalidPackage' check is disabled. (reflections depends on javassist)
        disable 'InvalidPackage'
    }
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals('debug')) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        title = sporkName
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "https://d.android.com/reference","${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

publish {
    userOrg = sporkUserOrg
    repoName = sporkRepoName
    groupId = sporkGroupId
    artifactId = sporkArtifactId
    version = sporkVersion
    description = sporkName
    website = sporkWebsite
}
