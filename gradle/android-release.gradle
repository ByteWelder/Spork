android.libraryVariants.all { variant ->
	def name = variant.buildType.name
	if (name.equals('debug')) {
		return; // Skip debug builds.
	}
	def task = project.tasks.create "jar${name.capitalize()}", Jar
	task.dependsOn variant.javaCompile
	task.from variant.javaCompile.destinationDir
	artifacts.add('archives', task);
}

android.libraryVariants.all { variant ->
	task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
		title = project.getName()
		description "Generates Javadoc for $variant.name."
		source = variant.javaCompile.source
		classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
		options {
			links "http://docs.oracle.com/javase/7/docs/api/"
			linksOffline "https://d.android.com/reference","${android.sdkDirectory}/docs/reference"
		}
		exclude '**/BuildConfig.java'
		exclude '**/R.java'
	}
}
